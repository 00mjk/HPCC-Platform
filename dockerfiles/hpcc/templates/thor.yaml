{{ range $thor := $.Values.thor -}}
{{- if not $thor.disabled -}}
{{- $masterPort := $thor.masterport | default 20000 -}}
{{- $slavePort := $thor.slaveport | default 20100 -}}
{{- $hthorName := printf "%s-hthor" .name }}
{{- $eclAgentName := printf "%s-agent" .name }}
{{- $thorAgentName := printf "%s-thoragent" .name }}
{{- $slaveName := printf "%s-slave" .name }}
{{- $serviceName := printf "%s-svc" .name }}
{{- $thorScope := omit . "eclagent" "thoragent" "hthor" }}
{{- $eclAgentDefaults := dict "name" $eclAgentName "replicas" 1 }}
{{- $eclAgentScope := .eclagent | mergeOverwrite $eclAgentDefaults | default $eclAgentDefaults }}
{{- $thorAgentDefaults := dict "name" $thorAgentName "containerPerAgent" true "replicas" 1 }}
{{- $thorAgentScope := .thoragent | mergeOverwrite $thorAgentDefaults | default $thorAgentDefaults }}
{{- $hthorDefaults := dict "name" $hthorName }}
{{- $hthorScope := .hthor | mergeOverwrite $hthorDefaults | default $hthorDefaults }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $eclAgentName | quote }}
spec:
  replicas: {{ $eclAgentScope.replicas }}
  selector:
    matchLabels:
      run: {{ $eclAgentName | quote }}
  template:
    metadata:
      labels:
        run: {{ $eclAgentName | quote }}
    spec:
      serviceAccountName: hpcc
      containers:
      - name: {{ $eclAgentName | quote }}
        args: [
                {{ include "hpcc.configArg" $eclAgentScope }},
                {{ include "hpcc.daliArg" $ }},
                {{ printf "\"--name=%s\"" .name }},
                {{ printf "\"--processConfig=/etc/config/%s.yaml\"" $hthorName }}
              ]
{{- include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 8 }}
{{ include "hpcc.addImageAttrs" (dict "root" $ "me" . "imagename" "eclagent") | indent 8 }}
{{ include "hpcc.addVolumeMounts" . | indent 8 }}
      volumes:
      - name: {{ .name }}-configmap-volume
        configMap:
          name: {{ .name }}-configmap
{{ include "hpcc.addVolumes" $ | indent 6 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $thorAgentName | quote }}
spec:
  replicas: {{ $thorAgentScope.replicas }}
  selector:
    matchLabels:
      run: {{ $thorAgentName | quote }}
  template:
    metadata:
      labels:
        run: {{ $thorAgentName | quote }}
    spec:
      serviceAccountName: hpcc
      containers:
      - name: {{ $thorAgentName | quote }}
        args: [
                {{ include "hpcc.configArg" $thorAgentScope }},
                {{ include "hpcc.daliArg" $ }},
                {{ printf "\"--name=%s\"" .name }},
                {{ printf "\"--processConfig=/etc/config/%s.yaml\"" .name }}
              ]
{{- include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 8 }}
{{ include "hpcc.addImageAttrs" (dict "root" $ "me" . "imagename" "eclagent") | indent 8 }}
{{ include "hpcc.addVolumeMounts" . | indent 8 }}
      volumes:
      - name: {{ .name }}-configmap-volume
        configMap:
          name: {{ .name }}-configmap
{{ include "hpcc.addVolumes" $ | indent 6 }}
---
kind: ConfigMap 
apiVersion: v1 
metadata:
  name: {{ $thorScope.name }}-configmap 
data:
  {{ $thorScope.name }}.yaml: |
    version: 1.0
    thor:
{{ toYaml $thorScope | indent 6 }}
    global:
{{ include "hpcc.generateGlobalConfigMap" $ | indent 6 }}

  {{ $eclAgentScope.name }}.yaml: |
    version: 1.0
    eclagent:
{{ toYaml $eclAgentScope | indent 6 }}
    global:
{{ include "hpcc.generateGlobalConfigMap" $ | indent 6 }}

  {{ $thorAgentScope.name }}.yaml: |
    version: 1.0
    eclagent:
{{ toYaml $thorAgentScope | indent 6 }}
      type: thor
    global:
{{ include "hpcc.generateGlobalConfigMap" $ | indent 6 }}

  {{ $hthorScope.name }}.yaml: |
    version: 1.0
    hthor:
{{ toYaml $hthorScope | indent 6 }}
    global:
{{ include "hpcc.generateGlobalConfigMap" $ | indent 6 }}

  hthor-jobspec.yaml: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: %jobname
    spec:
      ttlSecondsAfterFinished: 100
      template:
        spec:
          serviceAccountName: hpcc
          {{- include "hpcc.checkDataStorageHostMount" (dict "root" $) | indent 10 }}
          containers:
          - name: %jobname
{{- include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 12 }}
            image: {{ include "hpcc.imageName" (dict "root" $ "me" . "imagename" "eclagent") }}
            resources:
              requests:
                #request-memory
                #request-cpu
              limits:
                #limit-memory
                #limit-cpu
            command: [
                        "hthor",
                        {{ include "hpcc.configArg" $hthorScope }},
                        {{ include "hpcc.daliArg" $ }},
                        %args
                     ]
{{ include "hpcc.addVolumeMounts" . | indent 12 }}
          volumes:
          - name: {{ .name }}-configmap-volume
            configMap:
              name: {{ .name }}-configmap
{{ include "hpcc.addVolumes" $ | indent 10 }}
          restartPolicy: Never
      backoffLimit: 0
  thormaster-jobspec.yaml: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: %jobname
    spec:
      ttlSecondsAfterFinished: 100
      template:
        spec:
          serviceAccountName: hpcc
          {{- include "hpcc.checkDataStorageHostMount" (dict "root" $) | indent 10 }}
          containers:
          - name: %jobname
{{- include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 12 }}
{{ include "hpcc.addImageAttrs" (dict "root" $ "me" . "imagename" "thormaster") | indent 12 }}
            args: [
                    {{ include "hpcc.configArg" $thorScope }},
                    {{ include "hpcc.daliArg" $ }},
                    %args
                  ]
{{ include "hpcc.addVolumeMounts" . | indent 12 }}
          volumes:
          - name: {{ .name }}-configmap-volume
            configMap:
              name: {{ .name }}-configmap
{{ include "hpcc.addVolumes" $ | indent 10 }}
          restartPolicy: Never
      backoffLimit: 0
  thorslave-jobspec.yaml: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: %jobname
    spec:
      parallelism: {{ $thor.numSlaves }}
      ttlSecondsAfterFinished: 100
      template:
        spec:
          serviceAccountName: hpcc
          containers:
          - name: %jobname
{{- include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 12 }}
{{ include "hpcc.addImageAttrs" (dict "root" $ "me" . "imagename" "thorslave") | indent 12 }}
            args: [
                    {{ include "hpcc.configArg" $thorAgentScope }},
                    {{ include "hpcc.daliArg" $ }},
                    %args
                  ]
{{ include "hpcc.addVolumeMounts" . | indent 12 }}
          volumes:
          - name: {{ .name }}-configmap-volume
            configMap:
              name: {{ .name }}-configmap
{{ include "hpcc.addVolumes" $ | indent 10 }}
          restartPolicy: Never
      backoffLimit: 0
---
{{- end }}
{{- end }}
